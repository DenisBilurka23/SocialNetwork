{"version":3,"sources":["hoc/AuthHOC.js","components/People/People.module.scss","components/People/People.js","Redux/Selectors/Selectors.js","components/People/PeopleContainer.js"],"names":["mapStateToProps","state","isAuthorized","AuthReducer","withAuthComponent","Component","newComponent","this","props","to","React","connect","module","exports","People","userGenerator","users","map","user","className","classes","id","src","photos","small","defaultProfilePicture","alt","name","buttonBlock","followed","disabled","isFollowLoaded","onClick","followLoading","onUnfollow","onFollow","Math","random","isLoaded","loadMoreHandler","loadMore","getDefaultProfilePicture","PeopleReducer","getUsers","getCurrentPage","currentPage","getAllUsers","allUsers","getPageSize","pageSize","getIsLoadedInfo","getIsFollowLoadedInfo","getIsAuthorizedInfo","PeopleContainer","console","log","onLoadHandler","FollowHandler","compose","dispatch","followToggleActionCreator","setUserNumberHandler","totalCountActionCreator","pageChangerHandler","page","pageChangerActionCreator","onLoadActionCreator","FollowLoadingAC","getUsersThunkCreator","onFollowThunkCreator","onUnfollowThunkCreator"],"mappings":"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","file":"static/js/3.088c4eaf.chunk.js","sourcesContent":["import React from 'react'\nimport {Redirect} from \"react-router\";\nimport {connect} from \"react-redux\";\n\nconst mapStateToProps = (state) => {\n    return {\n        isAuthorized: state.AuthReducer.isAuthorized\n    }\n}\nexport const withAuthComponent = (Component) => {\n    class newComponent extends React.Component {\n        render() {\n            if (this.props.isAuthorized) return <Component {...this.props}/>\n            return <Redirect to=\"/login\"/>\n        }\n    }\n    return connect(mapStateToProps)(newComponent)\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"People\":\"People_People__o17t-\",\"buttonBlock\":\"People_buttonBlock__3EtMV\",\"loadMore\":\"People_loadMore__14cep\",\"pages\":\"People_pages__2NBlI\",\"current\":\"People_current__1_kAD\",\"page\":\"People_page__1__Cb\"};","import React from 'react'\nimport classes from './People.module.scss'\nimport Preloader from \"../common/preloader/preloader\";\nimport {NavLink} from \"react-router-dom\";\n\nconst People = (props) => {\n    const userGenerator = props.users.map((user) => {\n        return (\n            <div className={classes.People} key={`user + ${Math.random()}`}>\n                <NavLink to={'profile/' + user.id}>\n                    <div>\n                        <img src={user.photos.small || props.defaultProfilePicture} alt=\"Profile picture\"/>\n                    </div>\n                    <div>\n                        {user.name}\n                    </div>\n                </NavLink>\n                <div className={classes.buttonBlock}>\n                    {\n                        user.followed ?\n                            <button disabled={!props.isFollowLoaded} onClick={() => {\n                                props.followLoading(true)\n                                props.onUnfollow(user.id)\n                            }}>Unfollow</button>\n                            : <button disabled={!props.isFollowLoaded} onClick={() => {\n                                props.followLoading(true)\n                                props.onFollow(user.id)\n                            }}>Follow</button>}\n                </div>\n            </div>\n        )\n    })\n\n    return (\n        <div>\n            {userGenerator}\n            {props.isLoaded ?\n                <button\n                    onClick={props.loadMoreHandler}\n                    className={classes.loadMore}\n                >load more</button> : <Preloader/>}\n        </div>\n    )\n}\n\n\nexport default People","export const getDefaultProfilePicture = (state) => state.PeopleReducer.defaultProfilePicture\nexport const getUsers = (state) => state.PeopleReducer.users\nexport const getCurrentPage = (state) => state.PeopleReducer.currentPage\nexport const getAllUsers = (state) => state.PeopleReducer.allUsers\nexport const getPageSize = (state) => state.PeopleReducer.pageSize\nexport const getIsLoadedInfo = (state) => state.PeopleReducer.isLoaded\nexport const getIsFollowLoadedInfo = (state) => state.PeopleReducer.isFollowLoaded\nexport const getIsAuthorizedInfo = (state) => state.AuthReducer.isAuthorized","import React from 'react'\nimport People from \"./People\"\nimport {\n    FollowLoadingAC,\n    followToggleActionCreator,\n    onLoadActionCreator, pageChangerActionCreator, totalCountActionCreator\n} from \"../../Actions/ActionCreators\"\nimport {connect} from \"react-redux\"\nimport {getUsersThunkCreator, onFollowThunkCreator, onUnfollowThunkCreator} from \"../../Thunk/Thunk\";\nimport {withAuthComponent} from \"../../hoc/AuthHOC\";\nimport {compose} from \"redux\";\nimport {\n    getAllUsers,\n    getCurrentPage,\n    getDefaultProfilePicture, getIsAuthorizedInfo, getIsFollowLoadedInfo, getIsLoadedInfo,\n    getPageSize,\n    getUsers\n} from \"../../Redux/Selectors/Selectors\";\n\nclass PeopleContainer extends React.Component {\n    componentDidMount() {\n        this.props.onLoadHandler(false)\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\n    }\n\n    loadMoreHandler = () => {\n        console.log(this.props.currentPage)\n        this.props.onLoadHandler(false)\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\n    }\n\n    render() {\n        return (\n            <People\n                loadMoreHandler={this.loadMoreHandler}\n                currentPage={this.props.currentPage}\n                defaultProfilePicture={this.props.defaultProfilePicture}\n                users={this.props.users}\n                FollowHandler={this.props.FollowHandler}\n                isLoaded={this.props.isLoaded}\n                followLoading={this.props.followLoading}\n                isFollowLoaded={this.props.isFollowLoaded}\n                onFollow={this.props.onFollow}\n                onUnfollow={this.props.onUnfollow}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        defaultProfilePicture: getDefaultProfilePicture(state),\n        users: getUsers(state),\n        currentPage: getCurrentPage(state),\n        allUsers: getAllUsers(state),\n        pageSize: getPageSize(state),\n        isLoaded: getIsLoadedInfo(state),\n        isFollowLoaded: getIsFollowLoadedInfo(state),\n        isAuthorized: getIsAuthorizedInfo(state)\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        FollowHandler: (id) => {\n            dispatch(followToggleActionCreator(id))\n        },\n        setUserNumberHandler: (users) => {\n            dispatch(totalCountActionCreator(users))\n        },\n        pageChangerHandler: (page) => {\n            dispatch(pageChangerActionCreator(page))\n        },\n        onLoadHandler: (isLoaded) => {\n            dispatch(onLoadActionCreator(isLoaded))\n        },\n        followLoading: (isFollowLoaded) => {\n            dispatch(FollowLoadingAC(isFollowLoaded))\n        },\n        getUsers: (currentPage, pageSize) => {\n            dispatch(getUsersThunkCreator(currentPage, pageSize))\n        },\n        onFollow: (id) => {\n            dispatch(onFollowThunkCreator(id))\n        },\n        onUnfollow: (id) => {\n            dispatch(onUnfollowThunkCreator(id))\n        }\n    }\n}\n// let AuthComponent = withAuthComponent(PeopleContainer)\n\n\n//     = (props) => {\n//     console.log(props.isAuthorized)\n//     if (props.isAuthorized) return <PeopleContainer {...props}/>\n//         return <Redirect to=\"/login\"/>\n// }\n\nexport default compose(\n    withAuthComponent,\n    connect(mapStateToProps, mapDispatchToProps)\n)(PeopleContainer)\n"],"sourceRoot":""}